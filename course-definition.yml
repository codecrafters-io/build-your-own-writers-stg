# Edit the descriptions in the "stages" section of this file.
# Apply updates at: https://app-staging.codecrafters.io/courses/writers-stg/admin/updates

slug: "writers-stg"
name: "Build your own writers stg"
short_name: "writers-stg"
release_status: "alpha"
description_md: |-
  Add a description for your course here.
short_description_md: |-
  Add a short description for your course here.
completion_percentage: 15
languages:
  - slug: "go"
  - slug: "python"
  - slug: "rust"

marketing:
  difficulty: medium
  sample_extension_idea_title: "My course extension idea"
  sample_extension_idea_description: "A description for my course extension idea"
  testimonials: []

stages:
  - slug: "oq4"
    legacy_slug: "first"
    name: "Read header"
    difficulty: very_easy
    description_md: |-
      In this stage, you'll add support for concurrent connections.

      ### Tests

      The tester will execute your program like this:
      ```bash
      $ ./your_server.sh
      ```

      Then, the tester will create multiple concurrent TCP connections to your server. (The exact number of connections is determined at random.) After that, the tester will send a single `GET` request through each of the connections.
      ```bash
      $ (sleep 3 && printf "GET / HTTP/1.1\r\n\r\n") | nc localhost 4221 &
      $ (sleep 3 && printf "GET / HTTP/1.1\r\n\r\n") | nc localhost 4221 &
      $ (sleep 3 && printf "GET / HTTP/1.1\r\n\r\n") | nc localhost 4221 &
      ```

      Your server must respond to each request with the following response:
      ```javascript
      HTTP/1.1 200 OK\r\n\r\n
      ```
    marketing_md: |-
      In this stage, we'll do XYZ.

  - slug: "ji3"
    legacy_slug: "second"
    name: "The second stage"
    difficulty: very_easy
    description_md: |-
      In this stage, we'll do XYZ

    marketing_md: |-
      In this stage, we'll do XYZ.

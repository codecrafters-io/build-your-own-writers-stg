# Edit the descriptions in the "stages" section of this file.
# Apply updates at: https://app-staging.codecrafters.io/courses/writers-stg/admin/updates

slug: "writers-stg"
name: "Build your own writers stg"
short_name: "writers-stg"
release_status: "alpha"
description_md: |-
  Add a description for your course here.
short_description_md: |-
  Add a short description for your course here.
completion_percentage: 15
languages:
  - slug: "go"
  - slug: "python"
  - slug: "rust"

marketing:
  difficulty: medium
  sample_extension_idea_title: "My course extension idea"
  sample_extension_idea_description: "A description for my course extension idea"
  testimonials: []

stages:
  - slug: "oq4"
    name: "Read header"
    difficulty: very_easy
    description_md: |-
      In this stage, you'll add support for `Accept-Encoding` headers that contain multiple compression schemes.

      ### Multiple compression schemes

      A client can specify that it supports multiple compression schemes by setting `Accept-Encoding` to a comma-separated list:
      ```
      Accept-Encoding: encoding-1, encoding-2, encoding-3
      ```

      For this extension, assume that your server only supports the `gzip` compression scheme.

      For this stage, you don't need to compress the body. You'll implement compression in a later stage.

      ### Tests

      The tester will execute your program like this:
      ```
      $ ./your_server.sh
      ```

      The tester will then send two `GET` requests to the `/echo/{str}` endpoint on your server.

      #### First request

      For the first request, the `Accept-Encoding` header will contain `gzip`, along with some invalid encodings:
      ```
      $ curl -v -H "Accept-Encoding: invalid-encoding-1, gzip, invalid-encoding-2" http://localhost:4221/echo/abc
      ```

      Your server's response must contain this header: `Content-Encoding: gzip`.
      ```javascript
      HTTP/1.1 200 OK
      Content-Type: text/plain
      Content-Encoding: gzip

      // Body omitted.
      ```

      #### Second request

      For the second request, the `Accept-Encoding` header will only contain invalid encodings:
      ```
      $ curl -v -H "Accept-Encoding: invalid-encoding-1, invalid-encoding-2" http://localhost:4221/echo/abc
      ```

      Your server's response must not contain a `Content-Encoding` header:
      ```javascript
      HTTP/1.1 200 OK
      Content-Type: text/plain

      // Body omitted.
      ```
    marketing_md: |-
      In this stage, we'll do XYZ.

  - slug: "ji3"
    name: "The second stage"
    difficulty: very_easy
    description_md: |-
      In this stage, we'll do XYZ

    marketing_md: |-
      In this stage, we'll do XYZ.
